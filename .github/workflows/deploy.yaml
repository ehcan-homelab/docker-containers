name: Deploy
on:
  push:
    branches:
      - main
    paths:
      - '**.yml'
      - '**.yaml'

jobs:
  detect_changes:
    runs-on: self-hosted
    outputs:
      yml_files: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            *.yml
            *.yaml

  deploy:
    needs: detect_changes
    name: Deploy (${{ matrix.config.stack_name }}, ${{ matrix.config.host }})
    runs-on: self-hosted
    strategy:
      matrix:
        config:
          - { host: '10.10.0.102', stack_name: 'arr-stack' }
          - { host: '10.10.0.102', stack_name: 'portainer' }
          - { host: '10.10.0.102', stack_name: 'uptime-kuma' }
          - { host: '10.10.0.102', stack_name: 'n8n' }
          - { host: '10.10.0.102', stack_name: 'wallos' }
          - { host: '10.10.0.102', stack_name: 'homarr' }
          - { host: '10.10.0.102', stack_name: 'open-webui' }

          - { host: '10.10.0.102', stack_name: 'cadvisor' }
          - { host: '10.10.0.107', stack_name: 'cadvisor' }
          - { host: '10.10.0.108', stack_name: 'cadvisor' }

          - { host: '10.10.0.102', stack_name: 'watchtower', server: 'docker' }
          - { host: '10.10.0.107', stack_name: 'watchtower', server: 'traefik' }
          - { host: '10.10.0.108', stack_name: 'watchtower', server: 'grafana' }

    env:
      DOCKER_HOST: tcp://${{ matrix.config.host }}:2375
      DOCKER_CONTEXT_NAME: ${{ matrix.config.stack_name }}-ctx
      DOCKER_COMPOSE_FILE: ${{ matrix.config.stack_name }}.yml
      DOCKER_PROJECT_NAME: ${{ matrix.config.stack_name }}

    steps:
      - name: Check if stack should deploy
        id: check
        run: |
          changed_files="${{ needs.detect_changes.outputs.yml_files }}"
          stack_file="${{ matrix.config.stack_name }}.yml"
          if [[ $changed_files == *"$stack_file"* ]]; then
            echo "should_deploy=true" >> $GITHUB_OUTPUT
          else
            echo "should_deploy=false" >> $GITHUB_OUTPUT
          fi

      - name: Checkout code
        if: steps.check.outputs.should_deploy == 'true'
        uses: actions/checkout@v4

      - name: Set up Docker context
        if: steps.check.outputs.should_deploy == 'true'
        run: |
          docker context \
            create ${{ env.DOCKER_CONTEXT_NAME }} \
            --docker host=${{ env.DOCKER_HOST }}

      - name: Inject secrets
        if: steps.check.outputs.should_deploy == 'true'
        run: |
          case ${{ env.DOCKER_PROJECT_NAME }} in
            "arr-stack")
              echo "${{ secrets.ARR_CIFS }}" >> $GITHUB_ENV
              ;;
            "open-webui")
              echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" > .env
              echo "WEBUI_SECRET_KEY=${{ secrets.OPEN_WEBUI_SECRET_KEY }}" >> .env
              ;;
            "watchtower")
              case ${{ matrix.config.server }} in
                "docker")
                  echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN_DOCKER }}" >> $GITHUB_ENV
                  ;;
                "traefik")
                  echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN_TRAEFIK }}" >> $GITHUB_ENV
                  ;;
                "grafana")
                  echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN_GRAFANA }}" >> $GITHUB_ENV
                  ;;
              esac
              ;;
          esac

      - name: Deploy with Docker Compose
        if: steps.check.outputs.should_deploy == 'true'
        run: |
          docker --context ${{ env.DOCKER_CONTEXT_NAME }} compose --file ${{ env.DOCKER_COMPOSE_FILE }} \
            --project-name ${{ env.DOCKER_PROJECT_NAME }} up -d --remove-orphans

      - name: Cleanup Docker context
        run: |
          docker context rm ${{ env.DOCKER_CONTEXT_NAME }} --force || true
